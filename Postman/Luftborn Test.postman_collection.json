{
	"info": {
		"_postman_id": "1c1f862c-7764-472d-8bbb-a49781275693",
		"name": "Luftborn Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15959388"
	},
	"item": [
		{
			"name": "Get Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"pm.response.to.have.status(200);",
							"});",
							"",
							"const responseJson = pm.response.json();",
							"const pageNumber = parseInt(pm.environment.get(\"PageNumber\"))",
							"",
							"pm.test(\"Page Number is correct\", () => {",
							"pm.expect(responseJson.page).to.eql(pageNumber)",
							"});",
							"",
							"pm.test(\"Body contains ID\",() => {",
							"  pm.expect(pm.response.text()).to.include(\"id\");",
							"});",
							"",
							"pm.test(\"Body contains Email\",() => {",
							"  pm.expect(pm.response.text()).to.include(\"email\");",
							"});",
							"",
							"pm.test(\"Body contains First Name\",() => {",
							"  pm.expect(pm.response.text()).to.include(\"first_name\");",
							"});",
							"",
							"pm.test(\"Body contains Last Name\",() => {",
							"  pm.expect(pm.response.text()).to.include(\"last_name\");",
							"});",
							"",
							"pm.test(\"Body contains Avatar\",() => {",
							"  pm.expect(pm.response.text()).to.include(\"avatar\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users?page={{PageNumber}}",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "{{PageNumber}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User Created\", () => {",
							"  pm.expect(pm.response.code).to.be.oneOf([201,202]);",
							"});",
							"",
							" const responseJson = pm.response.json();",
							" const email = (pm.environment.get(\"Email\"))",
							" const firstName = (pm.environment.get(\"FirstName\"))",
							" const lastName = (pm.environment.get(\"LastName\"))",
							" const avatar = (pm.environment.get(\"Avatar\"))",
							"",
							"pm.test(\"Email is correct\", () => {",
							"pm.expect(responseJson.email).to.eql(email)",
							"});",
							"",
							"pm.test(\"First Name is correct\", () => {",
							"pm.expect(responseJson.first_name).to.eql(firstName)",
							"});",
							"",
							"pm.test(\"Last Name is correct\", () => {",
							"pm.expect(responseJson.last_name).to.eql(lastName)",
							"});",
							"",
							"pm.test(\"Avatar is correct\", () => {",
							"pm.expect(responseJson.avatar).to.eql(avatar)",
							"});",
							"",
							"pm.test(\"Body contains ID\",() => {",
							"  pm.expect(pm.response.text()).to.include(\"id\");",
							"});",
							"",
							"pm.test(\"Body contains Creation Date\",() => {",
							"  pm.expect(pm.response.text()).to.include(\"createdAt\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n            \"email\": \"{{Email}}\",\n            \"first_name\": \"{{FirstName}}\",\n            \"last_name\": \"{{LastName}}\",\n            \"avatar\": \"{{Avatar}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		}
	]
}